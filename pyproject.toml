[tool.poetry]
name = "glip"
version = "0.1.0"
description = ""
authors = ["nobu-g <ueda-n127@hotmail.co.jp>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
torch = [
    { platform = "darwin", version = "1.10.2", source = "PyPI" },
    { platform = "linux", url = "https://download.pytorch.org/whl/cu111/torch-1.9.1%2Bcu111-cp39-cp39-linux_x86_64.whl" },
]
#torch = [
#  { version = "1.9.1+cu111", source = "torch_cu111", markers = "extra=='cuda'", optional = true },
#  { url = "https://download.pytorch.org/whl/cpu/torch-1.9.1-cp39-none-macosx_11_0_arm64.whl", markers = "extra!='cuda'", optional = true },
#]
#  { version = "1.9.1", source = "torch_cpu", markers = "extra!='cuda'", optional = true },
torchvision =[
    { platform = "darwin", version = "^0.11.3" },
    { platform = "linux", version = "^0.10.1" },
]
transformers = "~4.35.2"
numpy = "^1.24.3"
einops = "^0.6.1"
shapely = "^2.0.1"
timm = "^0.9.2"
yacs = "^0.1.8"
tensorboardx = "^2.6"
ftfy = "^6.1.1"
prettytable = "^3.7.0"
pymongo = "^4.3.3"
setuptools = "^67.8.0"
pycocotools = "^2.0.6"
scipy = "^1.10.1"
opencv-python = "4.5.5.64"
inflect = "^7.0.0"
nltk = "^3.8.1"
sentencepiece = "^0.1.99"
protobuf = "^3.20"
rhoknp = "^1.6.0"
dataclasses-json = "^0.6.3"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"
tensorboardx = "^2.6.2.2"
tensorboard = "^2.15.1"

[[tool.poetry.source]]
name = "torch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"

[[tool.poetry.source]]
name = "torch_cu111"
url = "https://download.pytorch.org/whl/cu111"
priority = "supplemental"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.extras]
cuda = []

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py38"
ignore = [
    "PLR0911",  # Too many return statements
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments in function definition
    "PLR0915",  # Too many statements
    "E501",  # Line too long
    "RUF001",  # String contains ambiguous `ノ` (KATAKANA LETTER NO). Did you mean `/` (SOLIDUS)?
    "RUF002",  # Docstring contains ambiguous `，` (FULLWIDTH COMMA). Did you mean `,` (COMMA)?
    "RUF003",  # Comment contains ambiguous `（` (FULLWIDTH LEFT PARENTHESIS). Did you mean `(` (LEFT PARENTHESIS)?
    "COM812",  # Trailing comma missing
    "PLR2004",  # Magic value used in comparison
]
select = ["F", "E", "W", "I", "B", "PL", "PD", "NPY", "RUF", "UP", "TID", "COM", "PT", "ARG", "PYI"]

[tool.ruff.per-file-ignores]
"tools/cityscapes/instances2dict_with_polygons.py" = ["ALL"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
known-third-party = ["maskrcnn_benchmark"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
